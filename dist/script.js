"use strict";(()=>{var C=n=>n==="X"?"O":"X",S=(n,t)=>n[0]===t[0]&&n[1]===t[1],T=n=>n==="X"||n==="O";var d=(n,t,r)=>{let e=t+r*3;return n|1<<e},y=(n,t,r)=>{let e=t+r*3;return n&~(1<<e)},m=(n,t,r)=>{let e=t+r*3;return n>>e&1},p=n=>(n&448)===448||(n&56)===56||(n&7)===7||(n&292)===292||(n&146)===146||(n&73)===73||(n&273)===273||(n&84)===84,v=(n,t)=>{let r=p(n),e=p(t);return r?"X":e?"O":(n|t)===511?"draw":"none"},g={aSubgridBitboard:[0,0,0,0,0,0,0,0,0],bSubgridBitboard:[0,0,0,0,0,0,0,0,0],activeSubgrid:"any",playerToMove:"X",complete:!1,moves:[]},f=class n{constructor(t){this.currentState=t||structuredClone(g)}reset(){this.currentState=structuredClone(g)}copy(){return new n(structuredClone(this.currentState))}checkWinSubgrid(t){let r=t[0]+t[1]*3,e=this.currentState.aSubgridBitboard[r],o=this.currentState.bSubgridBitboard[r];return v(e,o)}checkWinWholeBoard(){let t=0,r=0,e=0;for(let a=0;a<3;a++)for(let s=0;s<3;s++){let c=this.checkWinSubgrid([a,s]);c==="X"?t=d(t,a,s):c==="O"?r=d(r,a,s):c==="draw"&&(e=d(e,a,s))}let o=v(t,r);return T(o)?o:o==="draw"||(t|r|e)===511?"draw":"none"}doMove(t){let{coordinate:r,player:e}=t,{aSubgridBitboard:o,bSubgridBitboard:a,activeSubgrid:s}=this.currentState,c=Math.floor(r[0]/3),i=Math.floor(r[1]/3),u=t.coordinate[0]%3,l=t.coordinate[1]%3,b=c+i*3,x=o[b],B=a[b],h=this.getTile(r);if(h!==null){debugger;throw new Error(`Tile already taken by ${h}`)}if(s!=="any"&&!S(s,[c,i]))throw new Error("Move is not in the active subgrid");this.currentState.moves.push(t),e==="X"?this.currentState.aSubgridBitboard[b]=d(x,u,l):this.currentState.bSubgridBitboard[b]=d(B,u,l),this.currentState.activeSubgrid=[u,l],this.checkWinSubgrid([u,l])!=="none"&&(this.currentState.activeSubgrid="any"),this.currentState.playerToMove=C(e),this.currentState.complete=this.checkWinWholeBoard()!=="none",this.onMove(t)}undoMove(t){let{coordinate:r,player:e}=t;this.currentState.moves.pop();let o=Math.floor(r[0]/3),a=Math.floor(r[1]/3),s=r[0]%3,c=r[1]%3,i=o+a*3,u=this.currentState.aSubgridBitboard[i],l=this.currentState.bSubgridBitboard[i];e==="X"?this.currentState.aSubgridBitboard[i]=y(u,s,c):this.currentState.bSubgridBitboard[i]=y(l,s,c),this.currentState.activeSubgrid=t.currentSubgrid,this.currentState.playerToMove=e,this.currentState.complete=!1}legalMoves(){if(this.currentState.complete)return[];let{activeSubgrid:t}=this.currentState,r=[];for(let e=0;e<3;e++)for(let o=0;o<3;o++)this.checkWinSubgrid([e,o])==="none"&&(t==="any"||S(t,[e,o]))&&r.push(...this.legalMovesSubgrid([e,o]));return r}getTile(t){let{aSubgridBitboard:r,bSubgridBitboard:e}=this.currentState,o=Math.floor(t[0]/3),a=Math.floor(t[1]/3),s=o+a*3,c=r[s],i=e[s],u=t[0]%3,l=t[1]%3;return m(c,u,l)?"X":m(i,u,l)?"O":null}legalMovesSubgrid(t){let{aSubgridBitboard:r,bSubgridBitboard:e}=this.currentState,o=t[0]+t[1]*3,a=r[o],s=e[o],c=[];for(let i=0;i<3;i++)for(let u=0;u<3;u++)m(a,i,u)||m(s,i,u)||c.push({coordinate:[t[0]*3+i,t[1]*3+u],player:this.currentState.playerToMove,currentSubgrid:t});return c}hash(){return this.currentState.moves.map(t=>t.coordinate.join(t.player)).join(" ")}onMove(t){}};var w=(n,t,r)=>{let e=document.createElement("div");e.classList.add("subgrid"),n.appendChild(e),e.dataset.status="none",e.dataset.x=`${t}`,e.dataset.y=`${r}`;for(let o=0;o<3;o++)for(let a=0;a<3;a++){let s=document.createElement("div");s.classList.add("tile"),e.appendChild(s),s.dataset.x=`${t*3+a}`,s.dataset.y=`${r*3+o}`,s.dataset.status="empty"}return e},M=(n,t)=>{for(let r=0;r<3;r++)for(let e=0;e<3;e++){let o=n.querySelector(`.subgrid[data-x="${r}"][data-y="${e}"]`),a=t.checkWinSubgrid([r,e]);o.dataset.status=a;let s=t.currentState.activeSubgrid,u=s!=="any"&&S(s,[r,e])||a==="none"&&s==="any";o.classList.toggle("active",u)}for(let r=0;r<9;r++)for(let e=0;e<9;e++){let o=t.getTile([r,e]),a=n.querySelector(`.tile[data-x="${r}"][data-y="${e}"]`);o===null?a.dataset.status="empty":a.dataset.status=o}};var W=async()=>{let n=document.getElementById("container"),t=new f,r=new Worker("dist/mcts.worker.js");for(let e=0;e<3;e++)for(let o=0;o<3;o++){let a=w(n,o,e);n.appendChild(a)}n.addEventListener("click",e=>{let o=e.target;if(!o.classList.contains("tile"))return;let a=parseInt(o.dataset.x),s=parseInt(o.dataset.y),c=t.legalMoves().find(i=>i.coordinate[0]===a&&i.coordinate[1]===s);c?t.doMove(c):console.log("Invalid move"),M(n,t)}),r.onmessage=e=>{let{bestMove:o,stats:a}=e.data,s=1-a.n_wins/a.n_plays;console.log("Current states: winning chances at",s.toFixed(2)),t.doMove(o),M(n,t)},r.postMessage({type:"getAIMove"}),t.onMove=e=>{if(t.currentState.complete){let o=t.checkWinWholeBoard();alert(`Game over. ${o} won.`);return}t.currentState.playerToMove,r.postMessage({type:"getAIMove"})}};W();})();
